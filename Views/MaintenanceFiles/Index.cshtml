@model IEnumerable<GyIMS.Models.MaintenanceFile>


@{
    ViewBag.Title = "运维附件信息";
}


@*界面主体*@

    <div>

        <div id="dg-search" margin="0,30,0,30">
            <label for="MaintenanceName">问题名称：</label>
            <input id="MaintenanceName" class="easyui-validatebox" data-options="width:200" />
        </div>

        <table id="dg"></table>

        <div id="dg-button">
            <a class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="Search()">查询</a>
            <a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-reload'" onclick="Reload()">刷新</a>
            <a href="/MaintenanceFiles/Create" class="easyui-linkbutton" data-options="iconCls:'icon-add'">添加</a>
            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-edit' " onclick="Edit()">修改</a>
            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove'" onclick="Delete()">删除</a>
            @*<form action="/MaintenanceFiles/Index" method="post" enctype="multipart/form-data">
            <input type="file" name="file" /><br />
            <input type="submit" value="提交" />
        </form>*@

            @*<form action="/MaintenanceFiles/File" enctype="multipart/form-data" method="post">
            <input type="file" class="easyui-filebox" value="" />
            <input type="submit" value="上传" />
        </form>*@

            <form action="/MaintenanceFiles/File" method="post" enctype="multipart/form-data">
                <input class="easyui-filebox" name="file" />
                <input type="submit" id="btnUpload" value="上传" />
            </form>
            <a href="/MaintenanceFiles/FileDownload/" >问题下载</a>
            <a href="/MaintenanceFiles/DownloadFile/" >答疑下载</a>


            @*<a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-print'" onclick="Download()">下载</a>*@
        </div>

</div>







@*脚本*@
<script type="text/javascript">




            $(function () {
            $("#dg").datagrid({
            title: '运维附件信息列表',
            url: '/MaintenanceFiles/GetMaintenanceFileList',
            queryParams: "",
            columns: [[
            { field: 'ID', title: '运维文件编号', width: 150, align: 'center' },
            { field: 'MaintenanceID', title: '运维单号', width: 150, align: 'center' },
            { field: 'MaintenanceName', title: '问题名称', width: 150, align: 'center' },
            { field: 'TypeName', title: '类型', width: 150, align: 'center' },
            { field: 'FileName', title: '附件名称', width: 150, align: 'center' },
            { field: 'FilePath', title: '附件类型', width: 100, align: 'center' },
            { field: 'StatusName', title: '状态', width: 60, align: 'center' },
            {
            field: 'CreateDate', title: '创建时间', width: 100, formatter: function (value, row, index) {
            return new Date(parseInt(value.substr(6, 13))).toLocaleDateString();
            }, align: 'center'
            },
            { field: 'CreatePersonName', title: '创建人', width: 100, align: 'center' },
            {
            field: 'UpdateDate', title: '修改时间', width: 100, formatter: function (value, row, index) {
            return new Date(parseInt(value.substr(6, 13))).toLocaleDateString();
            }, align: 'center'
            },
            { field: 'UpdatePersonName', title: '修改人', width: 100, align: 'center' },
            { field: 'Summary', title: '备注', width: 100, align: 'center' }
            ]],
            toolbar: '#dg-button',
            singleSelect: true,
            pagination: true,
            pageSize: 10,
            pageList: [10, 20, 30],
            method: 'get'
            });
            })

            //刷新
            function Reload() {
            $('#MaintenanceName').val("");
            InitGrid("");
            }

            //修改
            function Edit() {
            var row = $('#dg').datagrid('getSelected');
            if (row == null) {
            alert("需要先选择要修改的数据！")
            }
            else {
            window.location.href = "/MaintenanceFiles/Edit/" + row.ID;
            }

            };

            //删除
            function Delete() {
            var row = $('#dg').datagrid('getSelected');
            if (row == null) {
            alert("需要先选择要删除的数据！")
            }
            else {
            if (confirm("你确定要删除该运维附件信息吗？")) {
            $.ajax({
            url: '/MaintenanceFiles/DeleteByAjax',//地址
            dataType: 'text',//返回数据类型
            type: 'POST',//类型
            data: { id: row.ID },
            //请求成功
            success: function () {
            alert("删除数据成功！");
            window.location.href = "/MaintenanceFiles/Index/";
            }
            })
            }

            }
            }

            //查询
            function Search() {
            //得到用户输入的参数，取值有几种方式：$("#id").combobox('getValue'), $("#id").datebox('getValue'), $("#id").val()
            //字段增加WHC_前缀字符，避免传递如URL这样的Request关键字冲突
            var queryData = {
            MaintenanceName: $("#MaintenanceName").val()
            }
            //将值传递给
            InitGrid(queryData);
            return false;
    }

    





            //初始化查询数据
            function InitGrid(queryData) {
            $("#dg").datagrid({
            title: '运维附件信息列表',
            url: '/MaintenanceFiles/GetMaintenanceFileList',
            queryParams: queryData,
            columns: [[
            { field: 'ID', title: '运维文件编号', width: 150, align: 'center' },
            { field: 'MaintenanceID', title: '运维单号', width: 150, align: 'center' },
            { field: 'MaintenanceName', title: '问题名称', width: 150, align: 'center' },
            { field: 'TypeName', title: '类型', width: 150, align: 'center' },
            { field: 'FileName', title: '附件名称', width: 150, align: 'center' },
            { field: 'FilePath', title: '附件类型', width: 100, align: 'center' },
            { field: 'StatusName', title: '状态', width: 60, align: 'center' },
            {
            field: 'CreateDate', title: '创建时间', width: 100, formatter: function (value, row, index) {
            return new Date(parseInt(value.substr(6, 13))).toLocaleDateString();
            }, align: 'center'
            },
            { field: 'CreatePersonName', title: '创建人', width: 100, align: 'center' },
            {
            field: 'UpdateDate', title: '修改时间', width: 100, formatter: function (value, row, index) {
            return new Date(parseInt(value.substr(6, 13))).toLocaleDateString();
            }, align: 'center'
            },
            { field: 'UpdatePersonName', title: '修改人', width: 100, align: 'center' },
            { field: 'Summary', title: '备注', width: 100, align: 'center' }
            ]],
            toolbar: '#dg-button',
            singleSelect: true,
            pagination: true,
            pageSize: 10,
            pageList: [10, 20, 30],
            method: 'get'
            });
            }

            //日期格式转换
            function GetDateFormat(str) {
            return new Date(parseInt(str.substr(6, 13))).toLocaleDateString();
            }

            </script>

